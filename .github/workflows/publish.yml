name: Publish to NPM

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    uses: ./.github/workflows/test.yml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GOOGLE_TEST_SERVICE_KEY: ${{ secrets.GOOGLE_TEST_SERVICE_KEY }}
      GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
      OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      BW_CLIENTID: ${{ secrets.BW_CLIENTID }}
      BW_CLIENTSECRET: ${{ secrets.BW_CLIENTSECRET }}
      BW_PASSWORD: ${{ secrets.BW_PASSWORD }}

  publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check if version has changed
      id: check
      run: |
        LOCAL_VERSION=$(node -p "require('./package.json').version")
        NPM_VERSION=$(npm view salakala version 2>/dev/null || echo "0.0.0")
        if [ "$LOCAL_VERSION" != "$NPM_VERSION" ]; then
          echo "Version changed from $NPM_VERSION to $LOCAL_VERSION"
          echo "version_changed=true" >> $GITHUB_OUTPUT
        else
          echo "Version unchanged"
          echo "version_changed=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Use Node.js 22.x
      if: steps.check.outputs.version_changed == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Update npm
      if: steps.check.outputs.version_changed == 'true'
      run: npm install -g npm@latest
    
    - name: Install dependencies
      if: steps.check.outputs.version_changed == 'true'
      run: npm ci
    
    - name: Build
      if: steps.check.outputs.version_changed == 'true'
      run: npm run build
    
    - name: Publish to NPM
      if: steps.check.outputs.version_changed == 'true'
      run: npm publish 